# Args: <path_to_bop_data> <bop_datset_name> <bop_toolkit_path> <path_to_cc_textures> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home/arturo/blender",
    "pip": [
      "h5py",
      "scikit-image",
      "pypng==0.0.20",
      "scipy",
      "matplotlib",
      "pytz"
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config": {
        "global": {
          "output_dir": "<args:4>"
        }
      }
    },
    {
      "module": "loader.ObjectLoader",
      "config": {
        "path": "<args:0>",
        "add_properties": {
          "cp_category_id": 1,
          "cp_physics": True
        },
      },
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "type": "MESH"  # this guarantees that the object is a mesh, and not for example a camera
          }
        },
        "cp_physics": True,
        "cp_category_id": 1,
        # "scale": [0.001, 0.001, 0.001] # Scale 3D model from mm to m
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": {
            "type": "MESH"
          }
        },
        "cf_change_to_vertex_color": "Col",
        "cf_set_specular": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.0,
            "max": 1.0
          },
        "cf_set_roughness": {
          "provider": "sampler.Value",
          "type": "float",
          "min": 0.0,
          "max": 1.0
        },
        cf_set_base_color": [0.9, 0.9, 0.9, 1],
      }
    },
    {
      "module": "constructor.BasicMeshInitializer",
      "config": {
        "meshes_to_add": [
        {
          "type": "plane",
          "name": "ground_plane0",
          "scale": [2, 2, 1]
        },
        {
          "type": "plane",
          "name": "ground_plane1",
          "scale": [2, 2, 1],
          "location": [0, -2, 2],
          "rotation": [-1.570796, 0, 0] # switch the sign to turn the normals to the outside
        },
        {
          "type": "plane",
          "name": "ground_plane2",
          "scale": [2, 2, 1],
          "location": [0, 2, 2],
          "rotation": [1.570796, 0, 0]
        },
        {
          "type": "plane",
          "name": "ground_plane4",
          "scale": [2, 2, 1],
          "location": [2, 0, 2],
          "rotation": [0, -1.570796, 0]
        },
        {
          "type": "plane",
          "name": "ground_plane5",
          "scale": [2, 2, 1],
          "location": [-2, 0, 2],
          "rotation": [0, 1.570796, 0]
        },
        {
          "type": "plane",
          "name": "light_plane",
          "location": [0, 0, 10],
          "scale": [3, 3, 1]
        }
        ]
      }
    },
    {
      "module": "manipulators.EntityManipulator",
      "config": {
        "selector": {
          "provider": "getter.Entity",
          "conditions": {
            "name": '.*plane.*'
          }
        },
        "cp_physics": False,
        "cp_category_id": 333
      }
    },
    {
      "module": "object.OnSurfaceSampler",
      "config": {
        "objects_to_sample": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_physics": True
          }
        },
        "surface": {
          "provider": "getter.Entity",
          "index": 0,
          "conditions": {
            "name": "ground_plane0"
          }
        },
        "pos_sampler": {
          "provider": "sampler.UpperRegionSampler",
          "to_sample_on": {
            "provider": "getter.Entity",
            "index": 0,
            "conditions": {
              "name": "ground_plane0"
            }
          },
          "min_height": 1,
          "max_height": 4,
          "face_sample_range": [ 0.5, 0.5 ],
          "use_ray_trace_check": False,
        },
        "min_distance": 0.01,
        "max_distance": 0.20,
        "rot_sampler": {
          "provider": "sampler.Uniform3d",
          "min": [ 0, 0, 0 ],
          "max": [ 0, 0, 6.28 ]
        }
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": {
            "name": "light_plane_material"
          }
        },
        "cf_switch_to_emission_shader": {
          "color": {
            "provider": "sampler.Color",
            "min": [0.9, 0.9, 0.9, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "strength": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 3,
            "max": 6
          }
        }
      }
    },
#    {
#      "module": "loader.TextureLoader",
#      "config": {
#        "path": "<args:1>",
#        "add_properties": {
#          "cp_dust_texture": False
#        },
#        "cf_set_base_color": [0.9, 0.9, 0.9, 1],
#      },
#    },
#    {
#      "module": "manipulators.MaterialManipulator",
#      "config": {
#        "selector": {
#          "provider": "getter.Material",
#          "conditions": {
#            "cf_use_materials_of_objects": {
#              "provider": "getter.Entity",
#              "conditions": {
#                "type": "MESH",
#                "cp_category_id": 1,
#              }
#            },
#          }
#        },
#        "cf_infuse_texture": {
#          "mode": "mix",
#          "texture_scale": 1.0,
#          "used_texture": {
#            "provider": "getter.Texture",
#            "conditions": {
#              "cp_dust_texture": False
#            }
#          }
#        },
#        # "cf_set_base_color": [0.9, 0.9, 0.9, 1],
#      }
#    },
#    {
#      "module": "loader.CCMaterialLoader",
#      "config": {
#        "folder_path": "<args:3>"
#      }
#    },
#    {
#      "module": "manipulators.EntityManipulator",
#      "config": {
#        "selector": {
#          "provider": "getter.Entity",
#          "conditions": {
#            "name": "ground_plane.*"
#          }
#        },
#        "mode": "once_for_all",
#        "cf_randomize_materials": {
#          "randomization_level": 1,
#          "materials_to_replace_with": {
#            "provider": "getter.Material",
#            "random_samples": 1,
#            "conditions": {
#              "cp_is_cc_texture": True
#            }
#          }
#        }
#      }
#    },

    {
      "module": "lighting.LightSampler",
      "config": {
        "lights": [
        {
          "location": {
            "provider": "sampler.Shell",
            "center": [0, 0, 0],
            "radius_min": 1, # now depends on the bottom area of the box
            "radius_max": 1.5, # this one too
            "elevation_min": 5,
            "elevation_max": 89,
            "uniform_elevation": True
          },
          "color": {
            "provider": "sampler.Color",
            "min": [0.5, 0.5, 0.5, 1.0],
            "max": [1.0, 1.0, 1.0, 1.0]
          },
          "type": "POINT",
          "energy": 200
        }
        ]
      }
    },
    {
      "module": "camera.CameraSampler",
      "config": {
        "cam_poses": [
        {
          "proximity_checks": {
            "min": 0.3
          },
          "excluded_objs_in_proximity_check":  {
            "provider": "getter.Entity",
            "conditions": {
              "name": "ground_plane.*",
              "type": "MESH"
            }
          },
          "number_of_samples": 300,
          "location": {
            "provider": "sampler.Shell",
            "center": [0, 0, 0],
            "radius_min": 0.51,
            "radius_max": 1.44,
            "elevation_min": 5,
            "elevation_max": 89,
            "uniform_elevation": True
          },
          "rotation": {
            "format": "look_at",
            "value": {
              "provider": "getter.POI",
              "selector": {
                "provider": "getter.Entity",
                "conditions": {
                  "type": "MESH",
                  "cp_category_id": 1,
                  "cp_physics": True
                },
                "random_samples": 10
              }
            },
            "inplane_rot": {
              "provider": "sampler.Value",
              "type": "float",
              "min": -0.7854,
              "max": 0.7854
            }
          }
        }
        ],
        "intrinsics":{
          "resolution_x": 612,
          "resolution_y": 512
        }
      }
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "samples": 50,
        "render_distance": True,
        "render_normals": True
        #"image_type": "JPEG"
      }
    },
    {
      "module": "writer.Hdf5Writer",
      "config": {
        "postprocessing_modules": {
          "distance": [
            {
              "module": "postprocessing.TrimRedundantChannels",
            }
          ]
        }
      }
    },
    {
      "module": "renderer.SegMapRenderer",
      "config": {
        "map_by": [ "instance", "class", "name" ]
      }
    },
    {
      "module": "writer.CocoAnnotationsWriter",
      "config": {
      }
    },
    {
      "module": "writer.ObjWriter",
      "config": {
        "path": "/home/arturo/renders/cup/cup.blend"
      }
    },
    {
      "module": "writer.BopWriter",
      "config": {
        "m2mm": True, # original bop annotations in mm (default)
        "append_to_existing_output": True,
        "postprocessing_modules": {
          "distance": [
            { "module": "postprocessing.Dist2Depth" }
          ]
        }
      }
    }

  ]
}
